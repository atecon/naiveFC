set verbose off
clear
#include naiveFC.gfn --force
include /home/at/git/naiveFC/gretl/naiveFC.inp --force

open AWM.gdt --quiet

series x = YGA		# output gap; for simplity named "x"
scalar h = 11		# set forecast horizon

# MEANFC
xmean = meanf(x, h)
xmean
fcplot(x, xmean, "Mean Forecast", "nice ylabel", "nice xlabel")

# SMEANF:
smean = smeanf(x, h)
smean
fcplot(x, smean, "Seasonal Mean Forecast")

# SNAIVE:
snaiv = snaive(x, h)
snaiv
fcplot(x, snaiv, "Naive Seasonal Forecast")

# RW wo drift
rw = rwf(x, h)
rw
fcplot(x, rw, "Random-Walk Forecast")

# RW with drift
rwd = rwf(x, h, 1)
rwd
fcplot(x, rwd, "Random-Walk + Drift Forecast")

# AR(1)
ar_1 = ar1f(x, h)
ar_1
fcplot(x, ar_1, "AR(1) Forecast")


# Average of Forecasts
avg_fc = avgfc(x, h)
avg_fc		# 1st col: point forecast, 2nd col: std. deviation
fcplot(x, avg_fc[,1], "Avg. of Forecasts")


#-------------------------------------
# NaiveTsCv
# Conduct rolling-sample naiveFC()
#-------------------------------------
bundle b = null
b.y = x
b.h = 4					# max. horizon
b.wsize = 33			# window size
string which = "smeanf"	# choose a method
# R U N
NaiveThroughTime(&b, which)
matrix FC = b.FC		# grab matrix of forecasts; rows: period forecasted, cols: fc-horizon
print FC
nttplot(&b)				# Plot

/* Optional
# Generate series out of forecast vectors and plot results
smpl x --no-missing --replace
smpl b.initfc ;
list L = x
loop i=1..b.h -q
	series FC_@which_h$i = FC[,i]
	setinfo FC_@which_h$i --description="@which $i-step ahead FC"
	L += FC_@which_h$i
endloop
gnuplot L --with-lines --time-series --output=display
*/








